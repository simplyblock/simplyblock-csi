{{- if .Values.storagenode.create -}}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: simplyblock-storage-node-sa

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: simplyblock-storage-node-role
rules:
- apiGroups: [""]
  resources: ["pods", "namespaces", "pods/exec"]
  verbs: ["list", "get", "create", "delete", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["create", "delete"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["create", "delete", "get", "list", "watch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: simplyblock-pods-list-sn
subjects:
- kind: ServiceAccount
  name: simplyblock-storage-node-sa
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: simplyblock-storage-node-role
  apiGroup: rbac.authorization.k8s.io

{{- range .Values.storagenode.daemonsets }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .name }}
  annotations:
    {{- with $.Values.simplyBlockAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  selector:
    matchLabels:
      app: {{ .appLabel }}
  template:
    metadata:
      labels:
        app: {{ .appLabel }}
      annotations:
        {{- range $key, $value := $.Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      serviceAccountName: simplyblock-storage-node-sa
      nodeSelector:
        {{ .nodeSelector.key }}: {{ .nodeSelector.value }}
      volumes:
        - name: dev-vol
          hostPath:
            path: /dev
        - name: etc-simplyblock
          hostPath:
            path: /var/simplyblock
        - name: host-sys
          hostPath:
            path: /sys
        - name: host-modules
          hostPath:
            path: /lib/modules
      hostNetwork: true
      {{- if .tolerations.create }}
      tolerations:
      {{- range .tolerations.list }}
      - operator: {{ .operator | quote }}
        {{- if .effect }}
        effect: {{ .effect | quote }}
        {{- end }}
        {{- if .key }}
        key: {{ .key | quote }}
        {{- end }}
        {{- if .value }}
        value: {{ .value | quote }}
        {{- end }}
      {{- end }}
      {{- end }}
      initContainers:
      - name: s-node-api-config-generator
        image: "{{ $.Values.image.simplyblock.repository }}:{{ $.Values.image.simplyblock.tag }}"
        imagePullPolicy: "{{ $.Values.image.simplyblock.pullPolicy }}"
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        command:
          - "python"
          - "simplyblock_web/node_configure.py"
          - "--max-lvol={{ $.Values.storagenode.maxLogicalVolumes }}"
          - "--max-size={{ $.Values.storagenode.maxSize }}"
          {{- with (default list $.Values.storagenode.pciAllowed) }}
          - "--pci-allowed={{ join "," . }}"
          {{- end }}
          {{- with (default list $.Values.storagenode.pciBlocked) }}
          - "--pci-blocked={{ join "," . }}"
          {{- end }}
          {{- if $.Values.storagenode.socketsToUse }}
          - "--sockets-to-use={{ $.Values.storagenode.socketsToUse }}"
          {{- end }}
          {{- if $.Values.storagenode.nodesPerSocket }}
          - "--nodes-per-socket={{ $.Values.storagenode.nodesPerSocket }}"
          {{- end }}
          {{- if $.Values.storagenode.coresPercentage }}
          - "--cores-percentage={{ $.Values.storagenode.coresPercentage }}"
          {{- end }}
        volumeMounts:
          - name: etc-simplyblock
            mountPath: /etc/simplyblock
          - name: host-modules
            mountPath: /lib/modules
            readOnly: true
        securityContext:
          privileged: true
      containers:
      - name: s-node-api-container
        image: "{{ $.Values.image.simplyblock.repository }}:{{ $.Values.image.simplyblock.tag }}"
        imagePullPolicy: "{{ $.Values.image.simplyblock.pullPolicy }}"
        command: ["python", "simplyblock_web/node_webapp.py", "storage_node_k8s"]
        env:
        - name: CORE_ISOLATION
          value: "{{ $.Values.storagenode.isolateCores }}"
        - name: UBUNTU_HOST
          value: "{{ $.Values.storagenode.ubuntuHost }}"
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          privileged: true
        volumeMounts:
        - name: dev-vol
          mountPath: /dev
        - name: etc-simplyblock
          mountPath: /etc/simplyblock
        - name: host-sys
          mountPath: /sys

{{- end }}

{{- end -}}
